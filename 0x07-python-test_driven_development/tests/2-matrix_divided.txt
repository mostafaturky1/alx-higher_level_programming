module
------

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

valid matrix
------------

>>> matrix = [
...     [3, 6, 9],
...     [12, 15, 18]
... ]
>>> print(matrix_divided(matrix, 3))
[[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]

>>> matrix = [[1,2,3],
... [12,23,34],
... [345,456,234]]
>>> print(matrix_divided(matrix, 3))
[[0.33, 0.67, 1.0], [4.0, 7.67, 11.33], [115.0, 152.0, 78.0]]

>>> matrix = [
...     [1.1, -2.2, 3.3],
...     [4.4, 5.5, -6.6]
... ]
>>> print(matrix_divided(matrix, 3))
[[0.37, -0.73, 1.1], [1.47, 1.83, -2.2]]

>>> matrix = [
...     [1, -2.2, 3, 4.4, 5],
...     [-6.6, 7.00, 8, 9.999, 10]
... ]
>>> print(matrix_divided(matrix, 3))
[[0.33, -0.73, 1.0, 1.47, 1.67], [-2.2, 2.33, 2.67, 3.33, 3.33]]

invalid matrix
--------------

>>> matrix = "not a list"
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = None
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = []
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [[]]
>>> print(matrix_divided(matrix, 3))
[[]]