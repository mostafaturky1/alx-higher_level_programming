-----------------
this is the test for 0-add_integer
-----------------

module
------
>>> add_integer = __import__('0-add_integer').add_integer

num test
--------
>>> print(add_integer(1, 2))
3
>>> print(add_integer(100, -2))
98
>>> print(add_integer(2))
100
>>> print(add_integer(100.3, -2))
98
>>> print(add_integer(-2, -5))
-7
>>> print(add_integer(10.3, 2.4))
12
>>> print(add_integer(-5.3, 2.4))
-3
>>> print(add_integer(-3.3, -2.4))
-5

non num test
------------
>>> print(add_integer(4, "School"))
Traceback (most recent call last):
...
TypeError: b must be an integer
>>> print(add_integer("School"))
Traceback (most recent call last):
...
TypeError: a must be an integer
>>> print(add_integer(None))
Traceback (most recent call last):
...
TypeError: a must be an integer
>>> add_integer(2, float('inf'))
Traceback (most recent call last):
...
OverflowError: cannot convert float infinity to integer
>>> add_integer(float('nan'))
Traceback (most recent call last):
ValueError: cannot convert float NaN to integer
>>> add_integer(2, float('nan'))
Traceback (most recent call last):
ValueError: cannot convert float NaN to integer

